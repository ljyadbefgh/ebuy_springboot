<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lcvc</groupId>
	<artifactId>ebuy_springboot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ebuy_springboot</name>
	<!--<packaging>jar</packaging>-->
	<packaging>war</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>


	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!--swagger在2.8-2.92版本之间都出现paramType = "path", required = true来设定restful路径参数时，文档直接测试会失败；退回该版本后一切正常。密切关注后续版本是否解决这个BUG-->
		<!--虽然swagger在2.7版本及以下可以使用 dataType = "Integer", required = true，但是在文档处的dataType描述确实未定义，故暂时又永辉2.9.2-->
		<swagger2.version>2.9.2</swagger2.version>
		<!--mysal驱动包-->
		<mysql.version>8.0.16</mysql.version>
		<mybatis.version>3.4.2</mybatis.version>
		<!--junit本来会由spring-boot-starter-test自动导入4.12版本以上，但是有时候这个版本会出错，可以将本地maven的Junit删除重新下载即可-->
		<junit.version>4.12</junit.version>
		<!--实现JSON必须包，添加该包后Maven会自动下载该类需要的其他jar:如common-collection,commons-beanutils，commons-lang，commons-logging，ezmorph等依赖包-->
		<json-lib.version>2.4</json-lib.version>
		<!--ueditor编辑器-->
		<ueditor.version>1.4.3</ueditor.version>



	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!--针对war打包（jar打包不需要该配置），先去掉tomcat的原生配置-->
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<!--针对war打包配置（jar打包不需要该配置）：打包的时候可以不用包进去，别的设施会提供。事实上该依赖理论上可以参与编译，测试，运行等周期。
                相当于compile，但是打包阶段做了exclude操作-->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--需要使用切面编程aop则加入，否则不需要-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<!--mysql驱动包-->
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!-- Spring Boot Mybatis 依赖 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.2.0</version>
		</dependency>

		<!--修改代码不需要重启springboot服务的依赖包-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!--redis配置-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!--添加thymeleaf支持的架构包，启用之后，默认跳转视图从static变为template-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!--swagge可以用来生成RESTFUL接口的在线文档，也可以直接在文档中进行接口测试，代替Postman。-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger2.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger2.version}</version>
		</dependency>



		<!--<dependency>-->
			<!--<groupId>junit</groupId>-->
			<!--<artifactId>junit</artifactId>-->
			<!--<version>${junit.version}</version>-->
		<!--</dependency>-->





		<!--添加json（手动JSON转换，比如用在拦截器）所需要的包-->
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>${json-lib.version}</version>
			<classifier>jdk15</classifier>
		</dependency>

		<!--ueditor所需的架包，开始-->
		<!--<dependency>-->
			<!--<groupId>cn.jasonone.ueditor</groupId>-->
			<!--<artifactId>ueditor-spring-boot-starter</artifactId>-->
			<!--<version>1.1.4</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160212</version>
		</dependency>

        <!--ueditor所需的架包，结束-->

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!--增加这个配置，devtols才会起作用让应用启动-->
					<fork>true</fork>
					<mainClass>com.lcvc.ebuy_springboot.EbuySpringbootApplication</mainClass>
				</configuration>
			</plugin>
			<!--ljy:打包时不要执行test文件夹下的单元测试类，如果不加入会自动执行-->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
