<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="com.cn.mybatis.test1.dao.userMapper"就是com.cn.mybatis.test1.dao(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.lcvc.ebuy_springboot.dao.ProductOrderDetailDao">

    <!--自定义返回的类型-->
    <resultMap id="productOrderDetail" type="ProductOrderDetail">
        <association property="product" javaType="Product" column="productId" select="com.lcvc.ebuy_springboot.dao.ProductDao.getSimple">
        </association>
        <association property="productOrder" javaType="ProductOrder" column="orderNo" select="com.lcvc.ebuy_springboot.dao.ProductOrderDao.getSimple">
        </association>
    </resultMap>

    <select id="get" resultMap="productOrderDetail">
        select * from product_order_detail where id=#{id}
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into product_order_detail(id,orderNo,productId,price,originalPrice,productNumber)
        values(null,#{productOrder.orderNo},#{product.id},#{price},#{originalPrice},#{productNumber})
    </insert>

    <insert id="saves"  useGeneratedKeys="true" keyProperty="id">
        <if test="list.size()>0">
            insert into product_order_detail(id,orderNo,productId,price,originalPrice,productNumber) values
            <foreach collection="list" item="item" index="index" separator=",">
                values(null,#{productOrder.orderNo},#{product.id},#{price},#{originalPrice},#{productNumber})
            </foreach>
        </if>
    </insert>

    <update id="update" parameterType="ProductOrderDetail">
        update product_order_detail
        <!-- 使用set标签可以将动态的配置SET 关键字，和剔除追加到条件末尾的任何不相关的逗号。 -->
        <set>
            <if test="price!=null">price=#{price},</if>
            <if test="productNumber!=null">productNumber=#{productNumber},</if>
        </set>
        where id=#{id}
    </update>

    <delete id="delete">
        delete from product_order_detail where id=#{id}
    </delete>

    <!--统一查询的条件，方便用于分页等查询，这里提供给query和querySize调用-->
    <sql id="queryWhere">
        <if test="objectQuery!=null">
            <bind name="productOrderQuery" value="objectQuery.productOrderQuery" />
            <if test="productOrderQuery!=null">
                left join product_order on product_order.orderNo =product_order_detail.orderNo
            </if>
            <where>
                <if test="productOrderQuery!=null">
                    <if test="productOrderQuery.orderNo!=null and productOrderQuery.orderNo.length()>0">
                        and product_order_detail.orderNo=#{productOrderQuery.orderNo}
                    </if>
                    <if test="productOrderQuery.paymentStatus!=null">
                        and product_order.paymentStatus=#{productOrderQuery.paymentStatus}
                    </if>
                    <if test="productOrderQuery.tag!=null">
                        and product_order.tag=#{productOrderQuery.tag}
                    </if>
                    <if test="productOrderQuery.tagQueryOfEnable!=null">
                        <choose>
                            <when test="productOrderQuery.tagQueryOfEnable==true">
                                and tag>=-50
                            </when>
                            <otherwise>
                                <![CDATA[
                                 and tag<-50
                                 ]]>
                            </otherwise>
                        </choose>
                    </if>
                    <bind name="createTimeQueryOfBegin" value="productOrderQuery.createTimeQueryOfBegin" />
                    <bind name="createTimeQueryOfEnd" value="productOrderQuery.createTimeQueryOfEnd" />
                    <choose>
                        <when test="createTimeQueryOfBegin!= null and createTimeQueryOfEnd != null">
                            AND product_order.createTime BETWEEN #{createTimeQueryOfBegin} AND #{createTimeQueryOfEnd}
                        </when>
                        <when test="createTimeQueryOfBegin!=null">
                            <![CDATA[
                              AND product_order.createTime>= #{createTimeQueryOfBegin}
                        ]]>
                        </when>
                        <when test="createTimeQueryOfEnd!=null">
                            <![CDATA[
                             AND product_order.createTime<= #{createTimeQueryOfEnd}
                        ]]>
                        </when>
                    </choose>
                </if>
                <if test="objectQuery.product!=null and objectQuery.product.id!=null">
                    and product_order_detail.productId=#{objectQuery.product.id}
                </if>
            </where>
        </if>
    </sql>

    <select id="readAll" resultType="ProductOrderDetail">
        select * from product_order_detail
        <include refid="queryWhere"></include>
    </select>


    <select id="querySize" resultType="int">
        select count(1) from product_order_detail
        <include refid="queryWhere"></include>
    </select>

    <select id="query" resultMap="productOrderDetail">
        select * from product_order_detail
        <include refid="queryWhere"></include>
        order by id desc limit #{offset},#{length}
    </select>



    <!--<select id="getNewTopProductList" resultType="Product">-->
        <!--select * from product order by createTime desc limit 0,#{pageSize}-->
    <!--</select>-->

    <!--==================================定制查询============================-->

    <select id="getProductOrderDetailsByOrderNo" resultMap="productOrderDetail" parameterType="String">
        select * from product_order_detail where orderNo=#{orderNo} order by id asc
    </select>



</mapper>