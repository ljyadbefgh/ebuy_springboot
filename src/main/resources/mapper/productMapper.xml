<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="com.cn.mybatis.test1.dao.userMapper"就是com.cn.mybatis.test1.dao(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.lcvc.ebuy_springboot.dao.ProductDao">
    <!--自定义返回的类型-->
    <resultMap id="product" type="Product">
        <!--定义主键，否则会和底下的previewPictures中的id冲突，导致无法获取值-->
        <id  property="id" column="id" javaType="java.lang.Integer"/>
        <association property="productType" javaType="ProductType" column="productTypeId" select="com.lcvc.ebuy_springboot.dao.ProductTypeDao.getForCascade">
        </association>
        <association property="creator" javaType="Admin" column="creatorId" select="com.lcvc.ebuy_springboot.dao.AdminDao.get">
        </association>
        <!--这里递归查询子菜单-->
        <collection  property="previewPictures" ofType="String" javaType="java.util.ArrayList" column="id" select="com.lcvc.ebuy_springboot.dao.ProductDao.getPreviewPicturePicUrlsOfProduct"/>
    </resultMap>

    <select id="get" resultMap="product">
        select * from product where id=#{id} for update
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into product(id,productTypeId,name,orderNum,recommendation,description,content,price,originalPrice,picUrl,repository,click,onSale,createTime,creatorId,finalEditorId,updateTime)
        values(null,#{productType.id},#{name},#{orderNum},#{recommendation},#{description},#{content},#{price},#{originalPrice},#{picUrl},#{repository},#{click},#{onSale},#{createTime},#{creator.id},null,null)
    </insert>

    <update id="update" parameterType="product">
        update product
        <!-- 使用set标签可以将动态的配置SET 关键字，和剔除追加到条件末尾的任何不相关的逗号。 -->
        <set>
            <if test="productType!=null and productType.id!=null">productTypeId=#{productType.id},</if>
            <if test="name!=null and name.length()>0">name=#{name},</if>
            <if test="orderNum!=null">orderNum=#{orderNum},</if>
            <if test="recommendation!=null">recommendation=#{recommendation},</if>
            <if test="description!=null">description=#{description},</if>
            <if test="content!=null">content=#{content},</if>
            <if test="price!=null and price>0">price=#{price},</if>
            <if test="originalPrice!=null and originalPrice>0">originalPrice=#{originalPrice},</if>
            <if test="picUrl!=null">picUrl=#{picUrl},</if>
            <if test="repository!=null and repository>0">repository=#{repository},</if>
            <if test="click!=null and click>0">click=#{click},</if>
            <if test="onSale!=null">onSale=#{onSale},</if>
            <if test="finalEditor!=null and finalEditor.id!=null">finalEditorId=#{finalEditor.id},</if>
            <if test="updateTime!=null">updateTime=#{updateTime},</if>
        </set>
        where id=#{id}
    </update>

    <delete id="delete">
        delete from product where id=#{id}
    </delete>

    <delete id="deletes" >
        delete from product where id in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="readAll" resultMap="product">
        select * from product
        <include refid="queryWhere"></include>
        order by orderNum asc,createTime desc
    </select>

    <select id="total" resultType="int">
        select count(id) from product
    </select>

    <!--统一查询的条件，方便用于分页等查询，这里提供给query和querySize调用-->
    <sql id="queryWhere">
        <if test="objectQuery!=null">
            <where>
                <if test="objectQuery.name!=null and objectQuery.name.length()>0">
                    <!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
                    <bind name="name" value="'%' + _parameter.objectQuery.name + '%'" />
                    and product.name like #{name}
                </if>
                <if test="objectQuery.productType!=null">
                    <if test="objectQuery.productType.id!=null">
                        and product.productTypeId=#{objectQuery.productType.id}
                    </if>
                </if>
                <if test="objectQuery.onSale!=null">
                    and product.onSale=#{objectQuery.onSale}
                </if>
                <if test="objectQuery.orderNum!=null">
                    and product.orderNum=#{objectQuery.orderNum}
                </if>
                <if test="objectQuery.creator!=null and objectQuery.creator.id!=null">
                    and product.creatorId=#{objectQuery.creator.id}
                </if>
                <if test="objectQuery.finalEditor!=null and objectQuery.finalEditor.id!=null">
                    and product.finalEditorId=#{objectQuery.finalEditor.id}
                </if>
            </where>
        </if>
    </sql>

    <select id="querySize" resultType="int">
        select count(1) from product
        <include refid="queryWhere"></include>
    </select>

    <select id="query" resultMap="product">
       /* select * from product*/
        select product.id,product.productTypeId,product.name,product.orderNum,product.recommendation,product.price,product.originalPrice,product.picUrl,product.repository,product.click,product.onSale,product.description,product.createTime,product.creatorId,product.finalEditorId,product.updateTime from product
        <include refid="queryWhere"></include>
        <choose>
            <when test="objectQuery.orderType!=null">
                <choose>
                    <when test="objectQuery.orderType==1">
                        order by product.orderNum asc,createTime desc
                    </when>
                    <when test="objectQuery.orderType==2">
                        order by product.orderNum desc,createTime desc
                    </when>
                    <when test="objectQuery.orderType==3">
                        order by product.click desc
                    </when>
                    <when test="objectQuery.orderType==4">
                        order by product.click asc
                    </when>
                    <when test="objectQuery.orderType==5">
                        order by product.price desc
                    </when>
                    <when test="objectQuery.orderType==6">
                        order by product.price asc
                    </when>
                    <when test="objectQuery.orderType==7">
                        order by product.originalPrice desc
                    </when>
                    <when test="objectQuery.orderType==8">
                        order by product.originalPrice asc
                    </when>
                    <when test="objectQuery.orderType==9">
                        order by product.recommendation desc
                    </when>
                    <when test="objectQuery.orderType==10">
                        order by product.recommendation asc
                    </when>
                    <when test="objectQuery.orderType==31">
                        order by product.createTime desc
                    </when>
                    <when test="objectQuery.orderType==32">
                        order by product.createTime asc
                    </when>
                    <when test="objectQuery.orderType==33">
                        order by product.updateTime desc
                    </when>
                    <when test="objectQuery.orderType==34">
                        order by product.updateTime asc
                    </when>
                    <otherwise>
                        order by product.orderNum asc,createTime desc
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                order by product.orderNum asc,createTime desc
            </otherwise>
        </choose>
        limit #{offset},#{length}
    </select>



    <!--<select id="getNewTopProductList" resultType="Product">-->
        <!--select * from product order by createTime desc limit 0,#{pageSize}-->
    <!--</select>-->

    <!--==================================定制查询============================-->

    <select id="getSimple" resultType="Product">
        select * from product where id=#{id}
    </select>

    <update id="updateForClickProduct">
      update product set click=click+1 where id=#{id}
    </update>

    <update id="updateProductToTransferProductTypeBySelect">
        update product set productTypeId=#{productTypeId} where 1=0
        <if test="productIds != null and productIds.length> 0">
            OR id in
            <foreach item="item" collection="productIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </update>

    <update id="updateProductRepositoryByIncreasement">
         update product set repository=repository+ROUND(RAND()*(#{max}-#{min}) + #{min})
          <![CDATA[
                 where repository<=10000
          ]]>

    </update>

    <!--==================================关联表查询（不单独写mapper的表）============================-->
    <!--获取指定产品的预览图片-->
    <select id="getPreviewPicturePicUrlsOfProduct" resultType="String">
        select picUrl from product_previewpicture where productId=#{productId} for update
    </select>

    <!--获取指定产品的预览图片-->
    <select id="getPreviewPicturesOfProduct" resultType="String">
        select picUrl from product_previewpicture where productId=#{productId} for update
    </select>

    <insert id="savePeviewPictures">
        <choose>
            <when test="previewPictures!=null and previewPictures.size()>0">
                insert into product_previewpicture(id,picUrl,productId) values
                <foreach collection="previewPictures" item="item" index="index" separator=",">
                    (null,#{item},#{productId})
                </foreach>
            </when>
            <otherwise>
                <!--执行一个空的b语句，否则如果是空的代码会报错-->
                select 0
            </otherwise>
        </choose>
    </insert>

    <delete id="deletePeviewPictures">
        delete from product_previewpicture where 1=0
        <if test="previewPictures!= null and previewPictures.size()> 0">
            OR picUrl in
            <foreach item="item" collection="previewPictures" open="(" separator="," close=")">
                #{item}
            </foreach>
            and productId=#{productId}
        </if>
    </delete>

    <delete id="deletePeviewPicturesByProductId">
        delete from product_previewpicture where 1=0
        <if test="productIds.length> 0">
            OR productId in
            <foreach item="item" collection="productIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>





</mapper>