<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="com.cn.mybatis.test1.dao.userMapper"就是com.cn.mybatis.test1.dao(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.lcvc.ebuy_springboot.dao.ProductDao">
    <!--自定义返回的类型-->
    <resultMap id="product" type="Product">
        <association property="productType" javaType="ProductType" column="productTypeId" select="com.lcvc.ebuy_springboot.dao.ProductTypeDao.get">
        </association>
        <association property="creator" javaType="Admin" column="creatorId" select="com.lcvc.ebuy_springboot.dao.AdminDao.get">
        </association>
    </resultMap>

    <select id="get" resultMap="product">
        select * from product where id=#{id}
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into product(id,productTypeId,name,orderNum,description,content,price,originalPrice,picUrl,number,click,onSale,createTime,creatorId,finalEditorId,updateTime)
        values(null,#{productType.id},#{name},#{orderNum},#{description},#{content},#{price},#{originalPrice},#{picUrl},#{number},#{click},#{onSale},#{createTime},#{creator.id},null,null)
    </insert>

    <update id="update" parameterType="product">
        update product
        <!-- 使用set标签可以将动态的配置SET 关键字，和剔除追加到条件末尾的任何不相关的逗号。 -->
        <set>
            <if test="productType!=null and productType.id!=null">productTypeId=#{productType.id},</if>
            <if test="name!=null and name.length()>0">name=#{name},</if>
            <if test="orderNum!=null">orderNum=#{orderNum},</if>
            <if test="description!=null">description=#{description},</if>
            <if test="content!=null">content=#{content},</if>
            <if test="price!=null and price>0">price=#{price},</if>
            <if test="originalPrice!=null and originalPrice>0">originalPrice=#{originalPrice},</if>
            <if test="picUrl!=null">picUrl=#{picUrl},</if>
            <if test="number!=null and number>0">number=#{number},</if>
            <if test="click!=null and click>0">click=#{click},</if>
            <if test="onSale!=null">onSale=#{onSale},</if>
            <if test="finalEditor!=null and finalEditor.id!=null">finalEditorId=#{finalEditor.id},</if>
            <if test="updateTime!=null">updateTime=#{updateTime},</if>
        </set>
        where id=#{id}
    </update>

    <delete id="delete">
        delete from product where id=#{id}
    </delete>

    <delete id="deletes" >
        delete from product where id in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="readAll" resultMap="product">
        select * from product order by orderNum asc,createTime desc
    </select>

    <select id="total" resultType="int">
        select count(id) from product
    </select>

    <select id="querySize" resultType="int">
        select count(1) from product
        <if test="objectQuery!=null">
            <where>
                <if test="objectQuery.name!=null and objectQuery.name.length()>0">
                    <!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
                    <bind name="name" value="'%' + _parameter.objectQuery.name + '%'" />
                    and name like #{name}
                </if>
                <if test="objectQuery.onSale!=null">
                    and onSale=#{objectQuery.onSale}
                </if>
            </where>
        </if>
    </select>

    <select id="query" resultMap="product">
        select * from product
        <if test="objectQuery!=null">
            <where>
                <if test="objectQuery.name!=null and objectQuery.name.length()>0">
                    <!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
                    <bind name="name" value="'%' + _parameter.objectQuery.name + '%'" />
                    and name like #{name}
                </if>
                <if test="objectQuery.onSale!=null">
                    and onSale=#{objectQuery.onSale}
                </if>
            </where>
        </if>
        order by id asc limit #{offset},#{length}
    </select>

    <!--<select id="getNewTopProductList" resultType="Product">-->
        <!--select * from product order by createTime desc limit 0,#{pageSize}-->
    <!--</select>-->







</mapper>